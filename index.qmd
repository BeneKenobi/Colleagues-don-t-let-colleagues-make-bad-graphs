---
title: "Colleagues Donâ€™t Let Colleagues Make Bad Graphs"
---

## [Colleagues Don't Let Colleagues Make]{.smallHeader} Pie Charts

```{r}
# Libraries
library(ggplot2)
library(tidyverse)
library(viridis)
library(patchwork)
library(ggbeeswarm)
library(grateful)

bene_colors <- c(
    "#47476b",
    "#cda715",
    "#318986",
    "#93003a",
    "#3081ad",
    "#6d3d3d",
    "#79779f",
    "#00c1bf",
    "#777586"
)
bene_colors_bright <- c("#70709e", "#ddd53e", "#4aa89b", "#ca115c", "#4ab0e2", "#8c6161", "#a1a1c3", "#2ee2e0", "#9d9db3")
bene_palette <- scale_fill_manual(values = bene_colors, breaks = waiver())
bene_palette_bright <- scale_fill_manual(values = bene_colors_bright, breaks = waiver())
patchwork_defauts <- plot_annotation(theme = theme(plot.background = element_rect(fill = "transparent", colour = NA)))
theme_set(theme_minimal() +
    theme(
        legend.position = "none",
        plot.title = element_blank(),
        panel.grid = element_blank(),
        axis.text = element_blank(),
        legend.margin = unit(0, "null"),
        panel.background = element_rect(fill = "transparent", colour = NA),
        plot.background = element_rect(fill = "transparent", colour = NA)
    ))
```

```{r}
#| echo: true
#| code-fold: true
#| label: fig-pies
#| fig-cap: "Pie Charts"
#| warning: false

data1 <- data.frame(name = letters[1:5], value = c(17, 18, 20, 22, 24))
data2 <- data.frame(name = letters[1:5], value = c(20, 18, 21, 20, 20))
data3 <- data.frame(name = letters[1:5], value = c(24, 23, 21, 19, 18))

plot_pie <- function(data) {
    ggplot(data, aes(x = "name", y = value, fill = name)) +
        geom_bar(width = 1, stat = "identity") +
        coord_polar("y", start = 0, direction = -1) +
        bene_palette +
        geom_text(aes(label = name), position = position_stack(vjust = 0.5), color = "white") +
        xlab("") +
        ylab("")
}

a <- plot_pie(data1)
b <- plot_pie(data2)
c <- plot_pie(data3)
a + b + c + patchwork_defauts
```

## [Colleagues Don't Let Colleagues Make]{.smallHeader} Pie Charts

```{r}
#| echo: true
#| code-fold: true
#| label: fig-pievsbar
#| fig-cap: "Pie Charts vs. Bar Charts"
#| warning: false

# reuses plots of fig-pies

plot_bar <- function(data) {
    ggplot(data, aes(x = name, y = value, fill = name)) +
        geom_bar(stat = "identity") +
        bene_palette +
        geom_text(aes(label = name), position = position_stack(reverse = TRUE), vjust = 1.5, color = "white") +
        ylim(0, 25) +
        xlab("") +
        ylab("")
}

d <- plot_bar(data1)
e <- plot_bar(data2)
f <- plot_bar(data3)

layout <- "
ABC
ABC
DEF
DEF
DEF
DEF
DEF
"

a + b + c + d + e + f + plot_layout(design = layout) + patchwork_defauts
```

## [Colleagues Don't Let Colleagues Make]{.smallHeader} Pie Charts

```{r}
#| echo: true
#| code-fold: true
#| label: fig-pievsstackbar
#| fig-cap: "Pie Charts vs. Bar Charts (stacked)"
#| warning: false

# reuses plots of fig-pies

# add source column to each data frame
data1 <- data1 %>%
    add_column(type = "I")
data2 <- data2 %>%
    add_column(type = "II")
data3 <- data3 %>%
    add_column(type = "III")

# combine data frames into a single data frame
data_combined <- rbind(data1, data2, data3)

g <- ggplot(data_combined, aes(x = rev(type), y = value, fill = name)) +
    geom_bar(position = position_fill(reverse = TRUE), stat = "identity", width = 0.25) +
    bene_palette +
    theme(
        legend.position = "none",
        panel.grid = element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank()
    ) +
    scale_x_discrete(expand = c(0, 0.4)) +
    geom_text(aes(label = name), position = position_fill(vjust = 0.5, reverse = TRUE), color = "white") +
    xlab("") +
    ylab("") +
    coord_flip()

layout <- "
AD
BD
CD
"

a + b + c + g + plot_layout(design = layout) + patchwork_defauts
```

## [Colleagues Don't Let Colleagues Make]{.smallHeader} Bar Plots for Means Separation [@Weissgerber2015]

```{r}
#| echo: true
#| code-fold: true
#| label: fig-meansseperationbar
#| fig-cap: "Means seperation bar plot"
#| warning: false

# group1 is sampled from a normal distribution with mean = 1 and sd = 1.
# group2 is sampled from a lognormal distribution with mean = 1 and sd = 1.
set.seed(1337)
group1 <- rnorm(n = 100, mean = 1, sd = 1)
group2 <- rlnorm(
    n = 100,
    meanlog = log(1^2 / sqrt(1^2 + 1^2)),
    sdlog = sqrt(log(1 + (1^2 / 1^2)))
)

groups_long <- cbind(
    group1,
    group2
) %>%
    as.data.frame() %>%
    gather("group", "response", 1:2)

bar <- groups_long %>%
    ggplot(aes(x = group, y = response)) +
    geom_bar(stat = "summary", fun = mean, aes(fill = group), width = 0.5) +
    stat_summary(
        geom = "errorbar", fun.data = "mean_se",
        width = 0.1, size = 1
    ) +
    scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
    bene_palette +
    theme(
        text = element_text(color = "black"),
        axis.text = element_text(color = "black"),
        legend.position = "none",
        plot.title = element_text(size = 10),
        plot.caption = element_text(hjust = 0),
        axis.line.x = element_line(color = "black"),
        axis.line.y = element_line(color = "black"),
        panel.grid.major.y = element_line(color = "grey")
    ) +
    labs(
        x = "Group",
        y = "Response"
    ) +
    ggtitle(
        paste0(
            "group1: mean = ", signif(mean(group1), 2),
            "; sd = ", signif(sd(group1), 2), "\n",
            "group2: mean = ", signif(mean(group2), 2),
            "; sd = ", signif(sd(group2), 2)
        )
    )

bar
```

## [Colleagues Don't Let Colleagues Make]{.smallHeader} Bar Plots for Means Separation

```{r}
#| echo: true
#| code-fold: true
#| label: fig-meansseperationall
#| fig-cap: "Means seperation alternatives: box plot and beeswarm plot"
#| warning: false

box <- groups_long %>%
    ggplot(aes(x = group, y = response)) +
    geom_boxplot(aes(fill = group), width = 0.5) +
    labs(
        x = "Group",
        y = "Response"
    ) +
    bene_palette_bright +
    theme(
        text = element_text(color = "black"),
        axis.text = element_text(color = "black"),
        legend.position = "none",
        plot.title = element_text(size = 10),
        plot.caption = element_text(hjust = 0),
        axis.line.x = element_line(color = "black"),
        axis.line.y = element_line(color = "black"),
        panel.grid.major.y = element_line(color = "grey")
    ) +
    ggtitle(
        paste0(
            "group1: median = ", signif(median(group1), 2),
            "; IQR = ", signif(IQR(group1), 2), "\n",
            "group2: median = ", signif(median(group2), 2),
            "; IQR = ", signif(IQR(group2), 2)
        )
    )

beeswarm <- groups_long %>%
    ggplot(aes(x = group, y = response)) +
    geom_beeswarm(alpha = 0.9, size = 2, shape = 21, color = "white", aes(fill = group), cex = 2, method = "compactswarm") +
    bene_palette +
    labs(
        x = "Group",
        y = "Response"
    ) +
    theme(
        text = element_text(color = "black"),
        axis.text = element_text(color = "black"),
        legend.position = "none",
        plot.title = element_text(size = 10),
        plot.caption = element_text(hjust = 0),
        axis.line.x = element_line(color = "black"),
        axis.line.y = element_line(color = "black"),
        panel.grid.major.y = element_line(color = "grey")
    ) +
    ggtitle(
        paste0(
            "group1: median = ", signif(median(group1), 2),
            "; IQR = ", signif(IQR(group1), 2), "\n",
            "group2: median = ", signif(median(group2), 2),
            "; IQR = ", signif(IQR(group2), 2)
        )
    )

bar + box + beeswarm + patchwork_defauts
```

##
::: {.center .center-y layout-valign="bottom"}
Presentation based on

*Friends Don't Let Friends Make Bad Graphs* [@Li2023]

[---]{}

Source code available at [![](github-mark.svg){height=1em .bottom} GitHub](https://github.com/BeneKenobi/Colleagues-don-t-let-colleagues-make-bad-graphs)
:::

## References {visibility="uncounted" .unnumbered .unlisted}
```{r}
citekeys <- cite_packages(output = "citekeys", out.dir = ".")
nocite_references(citekeys, citation_processor = "pandoc")
```
::: {#refs}
:::