[
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "",
    "text": "Presentation based on\nFriends Don’t Let Friends Make Bad Graphs [1]\n—\nSource code available at  GitHub"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-pie-charts-holtzsiirtola2019few2007nussbaumer2011",
    "href": "index.html#colleagues-dont-let-colleagues-make-pie-charts-holtzsiirtola2019few2007nussbaumer2011",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Pie Charts [2]–[5]",
    "text": "Colleagues Don’t Let Colleagues Make Pie Charts [2]–[5]\n\n\nCode\ndata1 &lt;- data.frame(name = letters[1:5], value = c(17, 18, 20, 22, 24))\ndata2 &lt;- data.frame(name = letters[1:5], value = c(20, 18, 21, 20, 20))\ndata3 &lt;- data.frame(name = letters[1:5], value = c(24, 23, 21, 19, 18))\n\nplot_pie &lt;- function(data) {\n  ggplot(data, aes(x = \"name\", y = value, fill = name)) +\n    geom_bar(width = 1, stat = \"identity\") +\n    coord_polar(\"y\", start = 0, direction = -1) +\n    bene_palette +\n    geom_text(aes(label = name), position = position_stack(vjust = 0.5), color = \"white\") +\n    xlab(\"\") +\n    ylab(\"\")\n}\n\na &lt;- plot_pie(data1)\nb &lt;- plot_pie(data2)\nc &lt;- plot_pie(data3)\na + b + c + patchwork_defauts\n\n\n\nFigure 1: Pie Charts\nLength is easier to estimate than angle, and the estimation of area is even worse."
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-pie-charts",
    "href": "index.html#colleagues-dont-let-colleagues-make-pie-charts",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Pie Charts",
    "text": "Colleagues Don’t Let Colleagues Make Pie Charts\n\n\nCode\n# reuses plots of fig-pies\n\n# add source column to each data frame\ndata1 &lt;- data1 %&gt;%\n  add_column(type = \"I\")\ndata2 &lt;- data2 %&gt;%\n  add_column(type = \"II\")\ndata3 &lt;- data3 %&gt;%\n  add_column(type = \"III\")\n\n# combine data frames into a single data frame\ndata_combined &lt;- rbind(data1, data2, data3)\n\ng &lt;- ggplot(data_combined, aes(x = rev(type), y = value, fill = name)) +\n  geom_bar(position = position_fill(reverse = TRUE), stat = \"identity\", width = 0.25) +\n  bene_palette +\n  theme(\n    legend.position = \"none\",\n    panel.grid = element_blank(),\n    axis.text.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  ) +\n  scale_x_discrete(expand = c(0, 0.4)) +\n  geom_text(aes(label = name), position = position_fill(vjust = 0.5, reverse = TRUE), color = \"white\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  coord_flip()\n\nlayout &lt;- \"\nAD\nBD\nCD\n\"\n\na + b + c + g + plot_layout(design = layout) + patchwork_defauts\n\n\n\nFigure 2: Pie Charts vs. Bar Charts (stacked)"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-pie-charts-1",
    "href": "index.html#colleagues-dont-let-colleagues-make-pie-charts-1",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Pie Charts",
    "text": "Colleagues Don’t Let Colleagues Make Pie Charts\n\n\nCode\n# reuses plots of fig-pies\n\nplot_bar &lt;- function(data) {\n  ggplot(data, aes(x = name, y = value, fill = name)) +\n    geom_bar(stat = \"identity\") +\n    bene_palette +\n    geom_text(aes(label = name), position = position_stack(reverse = TRUE), vjust = 1.5, color = \"white\") +\n    ylim(0, 25) +\n    xlab(\"\") +\n    ylab(\"\")\n}\n\nd &lt;- plot_bar(data1)\ne &lt;- plot_bar(data2)\nf &lt;- plot_bar(data3)\n\nlayout &lt;- \"\nABC\nABC\nDEF\nDEF\nDEF\nDEF\nDEF\n\"\n\na + b + c + d + e + f + plot_layout(design = layout) + patchwork_defauts\n\n\n\nFigure 3: Pie Charts vs. Bar Charts"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-bar-plots-for-means-separation-weissgerber2015",
    "href": "index.html#colleagues-dont-let-colleagues-make-bar-plots-for-means-separation-weissgerber2015",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Bar Plots for Means Separation [6]",
    "text": "Colleagues Don’t Let Colleagues Make Bar Plots for Means Separation [6]\n\n\nCode\nbene_palette_shifted &lt;- scale_fill_manual(values = bene_colors[-1], breaks = waiver())\n\n# group1 is sampled from a normal distribution with mean = 1 and sd = 1.\n# group2 is sampled from a lognormal distribution with mean = 1 and sd = 1.\nset.seed(2363)\ngroup1 &lt;- rnorm(n = 250, mean = 1, sd = 1)\ngroup2 &lt;- rlnorm(\n  n = 250,\n  meanlog = log(1^2 / sqrt(1^2 + 1^2)),\n  sdlog = sqrt(log(1 + (1^2 / 1^2)))\n)\n\ngroups_long &lt;- cbind(\n  group1,\n  group2\n) %&gt;%\n  as.data.frame() %&gt;%\n  gather(\"group\", \"response\", 1:2)\n\nbar &lt;- groups_long %&gt;%\n  ggplot(aes(x = group, y = response)) +\n  geom_bar(stat = \"summary\", fun = mean, aes(fill = group), width = 0.5, colour = \"black\") +\n  stat_summary(\n    geom = \"errorbar\", fun.data = \"mean_se\",\n    width = 0.1, size = 1\n  ) +\n  scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +\n  bene_palette_shifted +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    legend.position = \"none\",\n    plot.title = element_text(size = 10),\n    plot.caption = element_text(hjust = 0),\n    axis.line.x = element_line(color = \"black\"),\n    axis.line.y = element_line(color = \"black\"),\n    panel.grid.major.y = element_line(color = \"grey\"),\n    axis.title.x = element_blank()\n  ) +\n  labs(\n    x = \"Group\",\n    y = \"Response\"\n  ) +\n  ggtitle(\n    paste0(\n      \"group1: mean = \", signif(mean(group1), 2),\n      \"; sd = \", signif(sd(group1), 2), \"\\n\",\n      \"group2: mean = \", signif(mean(group2), 2),\n      \"; sd = \", signif(sd(group2), 2)\n    )\n  )\n\nbar\n\n\n\nFigure 4: Means seperation bar plot"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-bar-plots-for-means-separation",
    "href": "index.html#colleagues-dont-let-colleagues-make-bar-plots-for-means-separation",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Bar Plots for Means Separation",
    "text": "Colleagues Don’t Let Colleagues Make Bar Plots for Means Separation\n\n\nCode\nbox &lt;- groups_long %&gt;%\n  ggplot(aes(x = group, y = response)) +\n  geom_boxplot(aes(fill = group), width = 0.5) +\n  labs(\n    y = \"Response\"\n  ) +\n  bene_palette_shifted +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    legend.position = \"none\",\n    plot.title = element_text(size = 10),\n    plot.caption = element_text(hjust = 0),\n    axis.line.x = element_line(color = \"black\"),\n    axis.line.y = element_line(color = \"black\"),\n    panel.grid.major.y = element_line(color = \"grey\"),\n    axis.title.x = element_blank()\n  ) +\n  ggtitle(\n    paste0(\n      \"group1: median = \", signif(median(group1), 2),\n      \"; IQR = \", signif(IQR(group1), 2), \"\\n\",\n      \"group2: median = \", signif(median(group2), 2),\n      \"; IQR = \", signif(IQR(group2), 2)\n    )\n  )\n\nbeeswarm &lt;- groups_long %&gt;%\n  ggplot(aes(x = group, y = response)) +\n  geom_beeswarm(alpha = 0.8, size = 2, shape = 21, color = \"black\", aes(fill = group), cex = 1.7, method = \"compactswarm\") +\n  bene_palette_shifted +\n  labs(\n    x = \"Group\",\n    y = \"Response\"\n  ) +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    legend.position = \"none\",\n    plot.title = element_text(size = 10),\n    plot.caption = element_text(hjust = 0),\n    axis.line.x = element_line(color = \"black\"),\n    axis.line.y = element_line(color = \"black\"),\n    panel.grid.major.y = element_line(color = \"grey\"),\n    axis.title.x = element_blank()\n  ) +\n  ggtitle(\n    paste0(\n      \"group1: median = \", signif(median(group1), 2),\n      \"; IQR = \", signif(IQR(group1), 2), \"\\n\",\n      \"group2: median = \", signif(median(group2), 2),\n      \"; IQR = \", signif(IQR(group2), 2)\n    )\n  )\n\nbar + box + beeswarm + patchwork_defauts\n\n\n\nFigure 5: Means seperation alternatives: box plot and beeswarm plot"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-violin-plots-for-small-sample-sizes",
    "href": "index.html#colleagues-dont-let-colleagues-make-violin-plots-for-small-sample-sizes",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Violin Plots for Small Sample Sizes",
    "text": "Colleagues Don’t Let Colleagues Make Violin Plots for Small Sample Sizes\n\n\nCode\n# Generate three sets of data from a normal distribution with mean = 1 and sd = 1.\n\nset.seed(666)\n\ndata_set &lt;- replicate(rnorm(5, mean = 1, sd = 1), n = 3, simplify = T) %&gt;%\n  as.data.frame() %&gt;%\n  gather(\"sample\", \"Response\", 1:3) %&gt;%\n  mutate(Group = str_replace(sample, \"V\", \"group\"))\n\nviolin_eg &lt;- data_set %&gt;%\n  ggplot(aes(x = Group, y = Response)) +\n  geom_violin(aes(fill = Group), trim = FALSE) +\n  stat_summary(geom = \"point\", fun = median) +\n  bene_palette_shifted +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    panel.grid.major.y = element_line(color = \"grey\"),\n    legend.position = \"none\",\n    axis.title.x = element_blank()\n  )\n\nviolin_eg\n\n\n\nFigure 6: Violin plots for small sample sizes (dot at median)"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-violin-plots-for-small-sample-sizes-1",
    "href": "index.html#colleagues-dont-let-colleagues-make-violin-plots-for-small-sample-sizes-1",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Violin Plots for Small Sample Sizes",
    "text": "Colleagues Don’t Let Colleagues Make Violin Plots for Small Sample Sizes\n\n\nCode\nbox_eg &lt;- data_set %&gt;%\n  ggplot(aes(x = Group, y = Response)) +\n  geom_boxplot(aes(fill = Group)) +\n  bene_palette_shifted +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    panel.grid.major.y = element_line(color = \"grey\"),\n    legend.position = \"none\",\n    axis.title.x = element_blank()\n  )\n\nviolin_eg + box_eg\n\n\n\nFigure 7: Violin plots and box plots for small sample sizes"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-violin-plots-for-small-sample-sizes-2",
    "href": "index.html#colleagues-dont-let-colleagues-make-violin-plots-for-small-sample-sizes-2",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Violin Plots for Small Sample Sizes",
    "text": "Colleagues Don’t Let Colleagues Make Violin Plots for Small Sample Sizes\n\n\nCode\njitter_eg &lt;- data_set %&gt;%\n  ggplot(aes(x = Group, y = Response)) +\n  geom_point(aes(fill = Group),\n    shape = 21, size = 3, color = \"black\",\n    position = position_jitter(seed = 1, width = 0.2)\n  ) +\n  bene_palette_shifted +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    panel.grid.major.y = element_line(color = \"grey\"),\n    legend.position = \"none\",\n    axis.title.x = element_blank()\n  )\n\n\nviolin_eg + box_eg + jitter_eg\n\n\n\nFigure 8: Violin plots, box plots and jitter plots for small sample sizes (n = 5)"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-bar-plot-meadows",
    "href": "index.html#colleagues-dont-let-colleagues-make-bar-plot-meadows",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Bar Plot Meadows",
    "text": "Colleagues Don’t Let Colleagues Make Bar Plot Meadows\n\n\nCode\nsheesleyData &lt;- read.csv(\"sheesley.csv\") %&gt;%\n  mutate(\n    Weld = as.factor(Weld),\n    Shift = as.factor(Shift),\n    Machine = as.factor(Machine),\n    Plant = as.factor(Plant),\n    Replication = as.factor(Replication)\n  )\nsheesleyData$WeldShiftMachinePlant &lt;- as.factor(paste(sheesleyData$Weld, sheesleyData$Shift, sheesleyData$Machine, sheesleyData$Plant, sep = \"-\"))\nsheesleyData$ShiftPlant &lt;- as.factor(paste(sheesleyData$Shift, sheesleyData$Plant, sep = \"-\"))\n\nbarmeadows &lt;- sheesleyData %&gt;%\n  ggplot(aes(x = WeldShiftMachinePlant, y = Y)) +\n  geom_bar(stat = \"summary\", fun = mean, aes(fill = Shift), width = 0.5, colour = \"black\") +\n  stat_summary(\n    geom = \"errorbar\", fun.data = \"mean_se\",\n    width = 0.1, size = 1\n  ) +\n  labs(\n    y = \"Average number of welded lead wires missed per hour\",\n    x = \"Weld-Shift-Machine-Plant\"\n  ) +\n  scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +\n  bene_palette_shifted +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)\n  )\n\nbarmeadows\n\n\n\nFigure 9: Bar plot for multi-factor data [7]"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-bar-plot-meadows-1",
    "href": "index.html#colleagues-dont-let-colleagues-make-bar-plot-meadows-1",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Bar Plot Meadows",
    "text": "Colleagues Don’t Let Colleagues Make Bar Plot Meadows\n\n\nCode\nMachine.labs &lt;- c(\"Machine 1\", \"Machine 2\")\nnames(Machine.labs) &lt;- c(\"1\", \"2\")\nPlant.labs &lt;- c(\"Plant 1\", \"Plant 2\")\nnames(Plant.labs) &lt;- c(\"1\", \"2\")\n\ndotsformultifactor &lt;- sheesleyData %&gt;%\n  ggplot(aes(x = Shift, y = Y)) +\n  facet_wrap(Machine ~ Plant, scales = \"free_x\", strip.position = \"bottom\", labeller = labeller(Machine = Machine.labs, Plant = Plant.labs)) +\n  geom_boxplot(aes(fill = Shift)) +\n  bene_palette_shifted +\n  labs(\n    y = \"Average number of welded lead wires missed per hour\",\n  ) +\n  theme_classic() +\n  theme(\n    text = element_text(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    legend.position = \"none\",\n    strip.text.x = element_text(color = \"black\"),\n    strip.background = element_blank(),\n    strip.placement = \"outside\",\n  )\n\ndotsformultifactor\n\n\n\nFigure 10: Multi-factorial data as boxplot facet"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-make-heatmaps-without-checking-outliers",
    "href": "index.html#colleagues-dont-let-colleagues-make-heatmaps-without-checking-outliers",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues Make Heatmaps without Checking Outliers",
    "text": "Colleagues Don’t Let Colleagues Make Heatmaps without Checking Outliers\n\n\nCode\nset.seed(2363)\n\ngroup1 &lt;- rnorm(mean = 1, sd = 0.2, n = 8)\ngroup2 &lt;- rnorm(mean = 0, sd = 0.2, n = 12)\n\ngroup3 &lt;- rnorm(mean = 0, sd = 0.2, n = 8)\ngroup4 &lt;- rnorm(mean = 1, sd = 0.2, n = 10)\n\ngroup5 &lt;- rnorm(mean = 10, sd = 1, n = 2)\n\ntoydata &lt;- data.frame(\n  observation1 = c(group1, group2),\n  observation2 = c(group3, group4, group5)\n) %&gt;%\n  mutate(feature = 1:20) %&gt;%\n  pivot_longer(cols = !feature, names_to = \"observation\", values_to = \"value\") %&gt;%\n  mutate(observation2 = str_remove(observation, \"observation\"))\n\np1 &lt;- toydata %&gt;%\n  mutate(observation2 = fct_rev(observation2)) %&gt;%\n  ggplot(aes(x = observation2, y = feature)) +\n  geom_tile(aes(fill = value)) +\n  scale_fill_gradientn(colors = viridis(n = 10)) +\n  labs(\n    x = \"Observations\",\n    y = \"Features\"\n  ) +\n  theme_classic() +\n  coord_flip()\n\np2 &lt;- toydata %&gt;%\n  mutate(observation2 = fct_rev(observation2)) %&gt;%\n  mutate(rank = rank(value, ties.method = \"first\")) %&gt;%\n  ggplot(aes(x = value, y = rank)) +\n  geom_point(\n    shape = 21, color = \"black\",\n    aes(fill = value), size = 3\n  ) +\n  scale_fill_gradientn(colors = viridis(n = 10)) +\n  theme_classic() +\n  theme(\n    legend.position = \"none\",\n  )\n\np3 &lt;- toydata %&gt;%\n  mutate(observation2 = fct_rev(observation2)) %&gt;%\n  mutate(rank = rank(value, ties.method = \"first\")) %&gt;%\n  mutate(value2 = case_when(\n    value &gt;= 2 ~ 2,\n    T ~ value\n  )) %&gt;%\n  ggplot(aes(x = value, y = rank)) +\n  geom_point(\n    shape = 21, color = \"black\",\n    aes(fill = value2), size = 3\n  ) +\n  scale_fill_gradientn(\n    colors = viridis(n = 10),\n    breaks = c(0, 1, 2),\n    labels = c(\"0\", \"1\", \"&gt;2\")\n  ) +\n  labs(fill = \"value\") +\n  theme_classic() +\n  theme(\n    legend.position = \"none\",\n  )\n\np4 &lt;- toydata %&gt;%\n  mutate(observation2 = fct_rev(observation2)) %&gt;%\n  mutate(value2 = case_when(\n    value &gt;= 1.5 ~ 2,\n    T ~ value\n  )) %&gt;%\n  ggplot(aes(x = observation2, y = feature)) +\n  geom_tile(aes(fill = value2)) +\n  scale_fill_gradientn(\n    colors = viridis(n = 10),\n    breaks = c(0, 1, 2),\n    labels = c(\"0\", \"1\", \"&gt;2\")\n  ) +\n  labs(\n    x = \"Observations\",\n    y = \"Features\",\n    fill = \"value\"\n  ) +\n  theme_classic() +\n  coord_flip()\n\nwrap_plots(p1, p2, p4, p3,\n  nrow = 2, ncol = 2,\n  widths = c(1, 0.7)\n)\n\n\n\nFigure 11: Heatmaps with outliers\n95% quantile = 1.723745"
  },
  {
    "objectID": "index.html#colleagues-dont-let-colleagues-makeplots-with-redgreen-or-rainbow-color-scales",
    "href": "index.html#colleagues-dont-let-colleagues-makeplots-with-redgreen-or-rainbow-color-scales",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "Colleagues Don’t Let Colleagues MakePlots with Red/Green or Rainbow color scales",
    "text": "Colleagues Don’t Let Colleagues MakePlots with Red/Green or Rainbow color scales\n\n\nCode\nabc_1 &lt;- expand.grid(\n  a = c(1:10),\n  b = c(1:10)\n) %&gt;%\n  mutate(c = a + b)\n\nto_grey_scale &lt;- function(hex) {\n  temp &lt;- col2rgb(hex) %&gt;%\n    t() %&gt;%\n    as.data.frame() %&gt;%\n    mutate(gs = 0.299 * red + 0.587 * green + 0.114 * blue)\n\n  rgb(temp$gs, temp$gs, temp$gs, maxColorValue = 256)\n}\n\ngrid_theme &lt;- theme(\n  text = element_text(color = \"black\"),\n  # legend.position = \"none\",\n  legend.title = element_blank(),\n  legend.text = element_blank(),\n  axis.title = element_blank(),\n  axis.text = element_text(color = \"black\"),\n)\n\n# Red/green\n\nRed_green &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradient2(low = \"red\", mid = \"white\", high = \"green\", midpoint = 11) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n## Grey scale\n\nRed_green_gs &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradient2(\n    low = to_grey_scale(\"red\"),\n    mid = \"white\",\n    high = to_grey_scale(\"green\"), midpoint = 11\n  ) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n## Red/green colorblind\n\nRed_green_deu &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradient2(\n    low = clr_deutan(\"red\"),\n    mid = clr_deutan(\"white\"),\n    high = clr_deutan(\"green\"), midpoint = 11\n  ) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n# Rainbow\n\nRainbow1 &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradientn(colors = rainbow(20)) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n## grey scale\n\nRainbow_gs &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradientn(colors = rainbow(20) %&gt;% to_grey_scale()) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n## Red/green color blind\n\nRainbow_deu &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradientn(colors = rainbow(20) %&gt;% clr_deutan()) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n# Viridis\n\nviridis_optionD &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradientn(colors = viridis(100)) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n## Grey scale\n\nviridis_gs &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradientn(colors = to_grey_scale(viridis(100))) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\n## Red/green color blind\n\nviridis_deu &lt;- abc_1 %&gt;%\n  ggplot(aes(x = a, y = b)) +\n  geom_tile(aes(fill = c)) +\n  scale_fill_gradientn(colors = clr_deutan(viridis(100))) +\n  theme_classic() +\n  grid_theme +\n  coord_fixed()\n\nwrap_plots(Red_green, Red_green_gs, Red_green_deu,\n  Rainbow1, Rainbow_gs, Rainbow_deu,\n  viridis_optionD, viridis_gs, viridis_deu,\n  nrow = 3,\n  ncol = 3\n)\n\n\n\nFigure 12: Heatmaps with different color scales simulated in black/white and deuteranopia"
  },
  {
    "objectID": "index.html#r-packages-used",
    "href": "index.html#r-packages-used",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "R Packages Used",
    "text": "R Packages Used\n\n\n\n\n\nPackage\nVersion\n\n\n\n\nbase [8]\n4.3.0\n\n\nggbeeswarm [9]\n0.7.1\n\n\nknitr [10]–[12]\n1.42\n\n\npatchwork [13]\n1.1.2\n\n\nprismatic [14]\n1.1.1\n\n\nrenv [15]\n0.17.3\n\n\nrmarkdown [16]–[18]\n2.21\n\n\nstyler [19]\n1.9.1\n\n\ntidyverse [20]\n2.0.0\n\n\nviridis [21]\n0.6.2"
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Colleagues Don’t Let Colleagues Make Bad Graphs",
    "section": "References",
    "text": "References\n\n\n[1] C. Li, “Friends Don’t Let Friends Make Bad Graphs.” Zenodo, Jan. 16, 2023. doi: 10.5281/ZENODO.7542491.\n\n\n[2] Y. Holtz, “The issue with pie chart.” https://www.data-to-viz.com/caveat/www.data-to-viz.com/caveat/pie.html (accessed Apr. 18, 2023).\n\n\n[3] H. Siirtola, “The Cost of Pie Charts,” in 2019 23rd International Conference Information Visualisation (IV), Jul. 2019, pp. 151–156. doi: 10.1109/IV.2019.00034.\n\n\n[4] S. Few, “Save the Pies for Dessert,” Aug. 2007. www.perceptualedge.com/articles/08-21-07.pdf (accessed Apr. 27, 2023).\n\n\n[5] C. Nussbaumer, “Death to pie charts,” Jul. 20, 2011. https://www.storytellingwithdata.com/blog/2011/07/death-to-pie-charts (accessed Apr. 27, 2023).\n\n\n[6] T. L. Weissgerber, N. M. Milic, S. J. Winham, and V. D. Garovic, “Beyond Bar and Line Graphs: Time for a New Data Presentation Paradigm,” PLOS Biology, vol. 13, no. 4, p. e1002128, Apr. 2015, doi: 10.1371/journal.pbio.1002128.\n\n\n[7] J. Sheesley, “Light Bulb Lead Wire Weld Process Comparison.” Accessed: May 03, 2023. [Online]. Available: https://www.itl.nist.gov/div898/software/dataplot/data/SHEESLEY.DAT\n\n\n[8] R Core Team, R: A language and environment for statistical computing. Vienna, Austria: R Foundation for Statistical Computing, 2023. Available: https://www.R-project.org/\n\n\n[9] E. Clarke, S. Sherrill-Mix, and C. Dawson, ggbeeswarm: Categorical scatter (violin point) plots. 2022. Available: https://CRAN.R-project.org/package=ggbeeswarm\n\n\n[10] Y. Xie, “knitr: A comprehensive tool for reproducible research in R,” in Implementing reproducible computational research, V. Stodden, F. Leisch, and R. D. Peng, Eds. Chapman; Hall/CRC, 2014.\n\n\n[11] Y. Xie, Dynamic documents with R and knitr, 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC, 2015. Available: https://yihui.org/knitr/\n\n\n[12] Y. Xie, knitr: A general-purpose package for dynamic report generation in r. 2023. Available: https://yihui.org/knitr/\n\n\n[13] T. L. Pedersen, patchwork: The composer of plots. 2022. Available: https://CRAN.R-project.org/package=patchwork\n\n\n[14] E. Hvitfeldt, prismatic: Color manipulation tools. 2022. Available: https://CRAN.R-project.org/package=prismatic\n\n\n[15] K. Ushey, renv: Project environments. 2023. Available: https://CRAN.R-project.org/package=renv\n\n\n[16] Y. Xie, J. J. Allaire, and G. Grolemund, R markdown: The definitive guide. Boca Raton, Florida: Chapman; Hall/CRC, 2018. Available: https://bookdown.org/yihui/rmarkdown\n\n\n[17] Y. Xie, C. Dervieux, and E. Riederer, R markdown cookbook. Boca Raton, Florida: Chapman; Hall/CRC, 2020. Available: https://bookdown.org/yihui/rmarkdown-cookbook\n\n\n[18] J. Allaire et al., rmarkdown: Dynamic documents for r. 2023. Available: https://github.com/rstudio/rmarkdown\n\n\n[19] K. Müller and L. Walthert, styler: Non-invasive pretty printing of r code. 2023. Available: https://CRAN.R-project.org/package=styler\n\n\n[20] H. Wickham et al., “Welcome to the tidyverse,” Journal of Open Source Software, vol. 4, no. 43, p. 1686, 2019, doi: 10.21105/joss.01686.\n\n\n[21] Garnier et al., viridis - colorblind-friendly color maps for r. 2021. doi: 10.5281/zenodo.4679424."
  }
]